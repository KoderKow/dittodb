% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mock-db.R
\name{with_mock_db}
\alias{with_mock_db}
\title{Run the DBI queries inside against a mocked db}
\usage{
with_mock_db(expr)
}
\arguments{
\item{expr}{the expression to execute}
}
\value{
nothing
}
\description{
When testing with dittodb, wrap your tests in \code{with_mock_db({})} to use the
database fixtures. \code{dittodb} will look for fixtures in all entries of
\code{\link{.db_mock_paths}}.
}
\details{
Connections should be made inside of \code{with_mock_db()} because \code{dittodb} uses
the database name (given in \code{dbname} or \code{Database} argument of \code{\link{dbConnect}}
depending on the driver) to separate different fixtures.
}
\examples{
\dontrun{
with_mock_db({
  con <- dbConnect(
    RPostgreSQL::PostgreSQL(),
    dbname = "nycflights",
    host = "127.0.0.1",
    user = "travis",
    password = ""
  )

  test_that("We get one airline", {
    one_airline <- dbGetQuery(
      con,
      "SELECT carrier, name FROM airlines LIMIT 1"
    )
    expect_is(one_airline, "data.frame")
    expect_equal(nrow(one_airline), 1)
    expect_equal(one_airline$carrier, "9E")
    expect_equal(one_airline$name, "Endeavor Air Inc.")
  })
})
}
}
