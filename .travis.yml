# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r

language: R
cache: packages

# linux builds should be able to use the docker set up, but have been
# segfaulting on connection with either MariaDB or RPostgres
before_install:
  - if [ $TRAVIS_OS_NAME = "linux" ]; then sudo /etc/init.d/postgresql stop || true; sh postgres-docker.sh; fi
  - if [ $TRAVIS_OS_NAME = "osx" ]; then sh .travis.postgres.macos.sh; sh .postgres.reset.macos.sh; fi
  - if [ $TRAVIS_OS_NAME = "osx" ]; then sh .travis.mariadb.macos.sh; sh .maraidb.reset.macos.sh; fi

before_script:
  - if [ $TRAVIS_OS_NAME = "linux" ]; then export DBTEST_DISABLE_PG=true; fi
  - if [ $TRAVIS_OS_NAME = "linux" ]; then export DBTEST_DISABLE_MARIA=true; fi
  # we have to install from source, or else we get `result_fetch(res@ptr, n = n)`
  - R -q -e 'install.packages("RMariaDB", type = "source");'

r:
  - oldrel
  - release
  - devel
os:
  - linux
  - osx
matrix:
  exclude:
  - os: osx
    r: oldrel
  - os: osx
    r: devel


# recreate the databases so they are not cached between runs (and they can be used by codecovr)
before_cache:
  - if [ $TRAVIS_OS_NAME = "linux" ]; then sh .postgres.reset.sh; fi
  - if [ $TRAVIS_OS_NAME = "osx" ]; then sh .postgres.reset.macos.sh; sh .mariadb.reset.macos.sh; fi


after_success:
  - test $TRAVIS_R_VERSION_STRING = "release" && test $TRAVIS_OS_NAME = "linux" && Rscript -e 'covr::codecov()'
